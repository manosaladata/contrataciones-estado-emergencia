#TRABAJANDO CON SANCIONES DEL TCE
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
sanciones<-str_match(pag_text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones
}
scrap(RUCs[1])
RUCs<-c("20523717759","20555589574","20419385442","20338570041","20293847038")
scrap(RUCs[1])
library(tidyverse)  #Usaremos en tibble
library(readxl)
library(xml2)  #Para leer html.
library(rvest)
library(RSelenium)  #Pra trabajar con páginas dinámicas
library(wdman)    #Navegador fantasma, permite usar rsDriver
library(robotstxt)
#library(strip)
library(gdata)
scrap(RUCs[1])
a<-scrap(RUCs[1])
scrap<-function(ruc) {a<-ruc
a<-"20555589574"
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",a,"#inhabMJ")
#UrlMadre
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
# cambiar el puerto si se opera en otra laptop, es conveniente.
#Abrimos el navegador (con RSelenium)
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Browser$open()
#Navegar la p?¡gina web que guardamos
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones"))
Browser$screenshot(display=TRUE)
# Decirle que act?ºe sobre la pÃ¡gina
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
Pagina
#---- Rvest # ----
#FILTRANDO
PaginaRUC<-read_html(Pagina_actual[[1]])
#TRABAJANDO CON SANCIONES DEL TCE
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
sanciones<-str_match(pag_text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones
}
a<-scrap(RUCs[1])
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",RUCs[2],"#inhabMJ")
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
#Abrimos el navegador (con RSelenium)
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Browser$open()
#Navegar la p?¡gina web que guardamos
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones"))
Browser$screenshot(display=TRUE)
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
Pagina
#FILTRANDO
PaginaRUC<-read_html(Pagina_actual[[1]])
#TRABAJANDO CON SANCIONES DEL TCE
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
server<-phantomjs(port=5015L)
scrap<-function(ruc) {a<-ruc
a<-"20555589574"
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",a,"#inhabMJ")
#UrlMadre
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
# cambiar el puerto si se opera en otra laptop, es conveniente.
#Abrimos el navegador (con RSelenium)
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Browser$open()
#Navegar la p?¡gina web que guardamos
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones"))
Browser$screenshot(display=TRUE)
# Decirle que act?ºe sobre la pÃ¡gina
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
Pagina
#---- Rvest # ----
#FILTRANDO
PaginaRUC<-read_html(Pagina_actual[[1]])
#TRABAJANDO CON SANCIONES DEL TCE
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
sanciones<-str_match(pag_text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones
}
a<-scrap(RUCs[1])
a
scrap<-function(ruc) {a<-ruc
a<-"20555589574"
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",a,"#inhabMJ")
#UrlMadre
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
# cambiar el puerto si se opera en otra laptop, es conveniente.
#Abrimos el navegador (con RSelenium)
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Browser$open()
#Navegar la p?¡gina web que guardamos
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones"))
Browser$screenshot(display=TRUE)
# Decirle que act?ºe sobre la pÃ¡gina
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
Pagina
#---- Rvest # ----
#FILTRANDO
PaginaRUC<-read_html(Pagina_actual[[1]])
#TRABAJANDO CON SANCIONES DEL TCE
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
}
a<-scrap(RUCs[1])
a<-sanciones(RUCs[1])
sanciones<- function(ruc){
text<-scrap(ruc)
sanciones<-str_match(text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones}
a<-sanciones(RUCs[1])
a
penalidades<- function(ruc){
str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
penalidades<- function(ruc){
str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
b<-penalidades(RUCs[1])
b
penalidades<- function(ruc){
text<-scrap(ruc)
str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
b<-penalidades(RUCs[1])
b
scrap<-function(ruc) {a<-ruc
a<-"20555589574"
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",a,"#inhabMJ")
#UrlMadre
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
# cambiar el puerto si se opera en otra laptop, es conveniente.
#Abrimos el navegador (con RSelenium)
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Browser$open()
#Navegar la p?¡gina web que guardamos
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones"))
Browser$screenshot(display=TRUE)
Sys.sleep(2)
# Decirle que act?ºe sobre la pÃ¡gina
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
PaginaRUC<-read_html(Pagina_actual[[1]])
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
}
b<-penalidades(RUCs[1])
b
penalidades<- function(ruc){
text<-scrap(ruc)
penalidades<-str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
b<-penalidades(RUCs[1])
b
c<-data.frame("Sanciones"=a, "Penalidades"=b)
c
a<-sanciones(RUCs[1])
a
b<-penalidades(RUCs[1])
b
c<-data.frame("Sanciones"=a, "Penalidades"=b)
c
a
b
c
library(RSelenium)
library(wdman)
library(rJava)
url<-"https://www.latlong.net/"
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
remote_driver$navigate("https://www.latlong.net/convert-address-to-lat-long.html")
binman::list_versions("chromedriver")  #Selenium creo
driver$close()
rm(driver)
gc()
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
source('D:/Git Hub-BEST/temp/seleniumprac.R', echo=TRUE)
Pagina<-read_html(address_textfield)
library(httr)
Pagina<-read_html(address_textfield)
library(rvest)
Pagina<-read_html(address_textfield)
address_textfield <- remote_driver$findElement(using = 'class', value = 'container')
Pagina<-read_html(address_textfield)
Pagina<-read_html(address_textfield)
# address_textfield$sendKeysToElement(list(""))
# find_button <- remote_driver$findElement(using = 'class', value = "button")
# find_button$clickElement()
#lat <- remote_driver$findElement(using = "id", value="lat")$getElementAttribute("value")
address_textfield
Page<-Browser$getPageSource()
Pagina<-read_html(url)
Pagina
pag_text<-Pagina%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text
# address_textfield$sendKeysToElement(list(""))
# find_button <- remote_driver$findElement(using = 'class', value = "button")
# find_button$clickElement()
#lat <- remote_driver$findElement(using = "id", value="lat")$getElementAttribute("value")
ses_rvest <- html_session("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
paises <- ses_rvest %>%
html_nodes(css= ".data-container") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
# address_textfield$sendKeysToElement(list(""))
# find_button <- remote_driver$findElement(using = 'class', value = "button")
# find_button$clickElement()
#lat <- remote_driver$findElement(using = "id", value="lat")$getElementAttribute("value")
ses_rvest <- html_session("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
paises <- ses_rvest %>%
html_nodes(css= ".data-container") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
ses_rvest <- html_session("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
paises <- ses_rvest %>%
html_nodes("div.data-container>ul>li") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
# address_textfield$sendKeysToElement(list(""))
# find_button <- remote_driver$findElement(using = 'class', value = "button")
# find_button$clickElement()
#lat <- remote_driver$findElement(using = "id", value="lat")$getElementAttribute("value")
ses_rvest <- html_session("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
paises <- ses_rvest %>%
html_nodes("div.data-container>ul>li") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
# address_textfield$sendKeysToElement(list(""))
# find_button <- remote_driver$findElement(using = 'class', value = "button")
# find_button$clickElement()
#lat <- remote_driver$findElement(using = "id", value="lat")$getElementAttribute("value")
ses_rvest <- html_session("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
paises <- ses_rvest %>%
html_nodes(".data-container") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
address_textfield <- remote_driver$findElement(using = 'class', value = 'container')
Page<-Browser$getPageSource()
paises <- Page %>%
html_nodes(".data-container") %>% # el :not() encierra una clase
html_text()
paises <- ses_rvest %>%
html_nodes(".data-container") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
address_textfield <- remote_driver$findElement(using = 'class', value = 'container')
Page<-Browser$getPageSource()
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
#binman::list_versions("chromedriver")  #Selenium creo
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
address_textfield <- remote_driver$findElement(using = 'class', value = 'container')
Page<-Browser$getPageSource()
Browser$screenshot(display=TRUE)
Pagina_actual<-Browser$getPageSource()
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
#binman::list_versions("chromedriver")  #Selenium creo
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
Browser <- remote_driver$findElement(using = 'class', value = 'container')
Page<-Browser$getPageSource()
Browser$screenshot(display=TRUE)
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])
paises <- Pagina<-read_html(Pagina_actual[[1]]) %>%
html_nodes(".data-container") %>% # el :not() encierra una clase
html_text()            # específica que quiero excluir
paises
library(RSelenium)
library(wdman)
library(rJava)
library(rvest)
url<-"https://www.latlong.net/"
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
Browser <- remote_driver$findElement(using = 'class', value = 'container')
Page<-Browser$getPageSource()
Browser$screenshot(display=TRUE)
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038/#inhabMJ")
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038#inhabMJ")
#Creamos una variable que nos permita entrar al browser, con rsDriver abrimos una ventana.
#A diferencia del remoteDriver el rsDriver requiere que tengas al rJava instalado (por ende el Java).
driver <- rsDriver(browser=c("chrome"), chromever="86.0.4240.22")
remote_driver <- driver[["client"]]
remote_driver$open()
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038#inhabMJ")
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/estadistica/20293847038#penalidades")
remote_driver$navigate("https://apps.osce.gob.pe/perfilprov-ui/ficha/20293847038")
load("D:/Git Hub-BEST/contrataciones-estado-emergencia/Data/sanciones_scrap.RData")
library(tidyverse)  #Usaremos en tibble
library(readxl)
library(xml2)  #Para leer html.
library(rvest)
library(RSelenium)  #Pra trabajar con páginas dinámicas
library(wdman)    #Navegador fantasma, permite usar rsDriver
library(robotstxt)
#library(strip)
library(gdata)
#WEB SCRAPING
server<-phantomjs(port=5015L)
#Sys.sleep(8)
scrap<-function(ruc) {
if(nchar(ruc)!=11){a<-NA}
else{
UrlMadre<-paste0("https://apps.osce.gob.pe/perfilprov-ui/estadistica/",ruc,"#inhabMJ")
paths_allowed(paths = c(UrlMadre)) # TRUE
options(encoding = "utf-8")
Browser <- remoteDriver(browserName = "phantomjs", port=5015L) #browserName = "edge"
Sys.sleep(5)
Browser$open()
Sys.sleep(5)
Browser$navigate(paste(UrlMadre))#,RUCs[1],"#sanciones")) #AQUÍ SALE EL ERROR
Sys.sleep(5)
Browser$screenshot(display=TRUE)
Sys.sleep(5)
Pagina_actual<-Browser$getPageSource()
Pagina<-read_html(Pagina_actual[[1]])  #Por el "xml2"
PaginaRUC<-read_html(Pagina_actual[[1]])
pag_text<-PaginaRUC%>%
html_nodes(css= ".data-container")%>%
html_text()
pag_text}
}
#DEFINIMOS FUNCIONES
sanciones<- function(ruc){
text<-scrap(ruc)
if (is.na(text)){a<-NA} else{
sanciones<-str_match(text, "Sanciones del TCE (\\s*(.*?)\\s*)El proveedor") #tidyverse
sanciones<-strsplit(sanciones, "")
sanciones <-as.numeric(sanciones[[2]][2])
sanciones}}
penalidades<- function(ruc){
text<-scrap(ruc)
penalidades<-str_match(text, "Penalidades (\\s*(.*?)\\s*)El proveedor") #tidyverse
penalidades<-strsplit(penalidades, "")
penalidades<-as.numeric(penalidades[[2]][2])
penalidades}
penalidades("233")
penalidades("233")
penalidades("23334")
penalidades("20555589574")
penalidades5<-sapply(data5$RUCPROV,penalidades)
penalidades6<-sapply(data6$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades6<-sapply(data6$RUCPROV,penalidades)
penalidades7<-sapply(data7$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades7<-sapply(data7$RUCPROV,penalidades)
penalidades8<-sapply(data8$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades8<-sapply(data8$RUCPROV,penalidades)
penalidades9<-sapply(data9$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades9<-sapply(data9$RUCPROV,penalidades)
penalidades6
penalidadess7
penalidades7
penalidades8
penalidades("20118848579")
debugSource('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/func_scrap.R', encoding = 'UTF-8', echo=TRUE)
penalidades6<-sapply(data6$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades6<-sapply(data6$RUCPROV,penalidades)
penalidades7<-sapply(data7$RUCPROV,penalidades)
penalidades6
penalidades7<-sapply(data7$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades7<-sapply(data7$RUCPROV,penalidades)
penalidades7
penalidades8<-sapply(data8$RUCPROV,penalidades)
#WEB SCRAPING
server<-phantomjs(port=5015L)
penalidades10<-sapply(data10$RUCPROV,penalidades)
save.image("D:/Git Hub-BEST/contrataciones-estado-emergencia/Data/sanciones_scrap.RData")
source('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/maps.R', encoding = 'UTF-8', echo=TRUE)
source('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/plotly.R', encoding = 'UTF-8', echo=TRUE)
library(shiny); runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/shiny.R')
runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/shiny.R')
runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/shiny.R')
zonas %>%#
group_by(ENTIDAD_DEPARTAMENTO) %>%
summarise(MONTOADJUDICADOSOLES=sum(MONTO_SOLES_EN_MILLONES),numero=n())%>%
arrange(desc(MONTOADJUDICADOSOLES))%>%
View()
source('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/analisis_exporatorio_Abner.R', encoding = 'UTF-8', echo=TRUE)
monto_dep<-zonas %>%#
group_by(ENTIDAD_DEPARTAMENTO) %>%
summarise(MONTOADJUDICADOSOLES=sum(MONTO_SOLES_EN_MILLONES),numero=n())%>%
arrange(desc(MONTOADJUDICADOSOLES))
View(monto_dep)
View(departamentos_numero)
View(departamentos_montos)
ggplot(monto_dep, mapping=aes(x =ENTIDAD_DEPARTAMENTO)) + coord_flip()+ stat_count (width = 0.7) +
theme(  axis.title = element_text( face = "bold" ),
title=element_text(face = "bold" ),
legend.text=element_text(size=80)) + labs(title = "Contratos por departamentos"                            ,
caption = "Fuente: OSCE",
x="Departamentos", y="Cantidad de contratos")
View(contr_direc)
ggplot(monto_dep, mapping=aes(x =MONTOADJUDICADOSOLES)) + coord_flip()+ stat_count (width = 0.7) +
theme(  axis.title = element_text( face = "bold" ),
title=element_text(face = "bold" ),
legend.text=element_text(size=80)) + labs(title = "Contratos por departamentos"                            ,
caption = "Fuente: OSCE",
x="Departamentos", y="Monto de contratos")
ggplot(monto_dep, mapping=aes(x =MONTOADJUDICADOSOLES))
ggplot(monto_dep, mapping=aes(x =MONTOADJUDICADOSOLES))+
geom_histogram(binwidth = 0.1, col='black', fill='green', alpha=0.4)+ labs(title = "Contratos por departamentos"                            ,
caption = "Fuente: OSCE",
x="Departamentos", y="Monto de contratos")
ggplot(movies, aes(x =MONTOADJUDICADOSOLES))
ggplot(monto_dep, aes(x =MONTOADJUDICADOSOLES))
mont_dep[2,3]
monto_dep[2,3]
monto_dep<-zonas %>%#
group_by(ENTIDAD_DEPARTAMENTO) %>%
summarise(MONTOADJUDICADOSOLES=sum(MONTO_SOLES_EN_MILLONES),numero=n())%>%
arrange(desc(MONTOADJUDICADOSOLES))%>%
as.data.frame()
monto_dep[2,3]
ggplot(monto_dep, aes(x =MONTOADJUDICADOSOLES))
ggplot(contr_direc, mapping=aes(x =MONTOADJUDICADO))
ggplot(contr_direc, mapping=aes(x =MONTOADJUDICADO))
ggplot(monto_dep, mapping=aes(x =MONTOADJUDICADOSOLES, y=ENTIDAD_DEPARTAMENTO))+
geom_bar(binwidth = 0.1, col='black', fill='green', alpha=0.4)+ labs(title = "Contratos por departamentos"                            ,
caption = "Fuente: OSCE",
x="Departamentos", y="Monto de contratos")
ggplot(monto_dep, aes(x =MONTOADJUDICADOSOLES, y=ENTIDAD_DEPARTAMENTO))+
geom_bar()
ggplot(monto_dep,x =MONTOADJUDICADOSOLES, y=ENTIDAD_DEPARTAMENTO)+
geom_bar(stat="identity", position="dodge")
ggplot(monto_dep, aes(x =MONTOADJUDICADOSOLES, y=ENTIDAD_DEPARTAMENTO))+
geom_bar(stat="identity", position="dodge")
montos_dep<-ggplot(monto_dep, aes(x =MONTOADJUDICADOSOLES, y=ENTIDAD_DEPARTAMENTO))+
geom_bar(stat="identity", position="dodge")
runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/shiny.R')
runApp('D:/Git Hub-BEST/contrataciones-estado-emergencia/R/shiny.R')
